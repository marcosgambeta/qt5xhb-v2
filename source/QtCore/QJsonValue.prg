//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
REQUEST QJSONARRAY
REQUEST QJSONOBJECT
REQUEST QVARIANT
#endif

CLASS QJsonValue

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD new1
   METHOD new3
   METHOD new9
   METHOD new
   METHOD delete
   METHOD isArray
   METHOD isBool
   METHOD isDouble
   METHOD isNull
   METHOD isObject
   METHOD isString
   METHOD isUndefined
   METHOD toArray
   METHOD toBool
   METHOD toDouble
   METHOD toObject
   METHOD toString
   METHOD toVariant
   METHOD type
   METHOD fromVariant

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QJsonValue
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtCore/QJsonValue>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtCore/QJsonValue>
#endif

#include <QtCore/QJsonArray>
#include <QtCore/QJsonObject>
#include <QtCore/QVariant>

    /*
    QJsonValue(QJsonValue::Type type = QJsonValue::Null)
    */
HB_FUNC_STATIC(QJSONVALUE_NEW1)
{
  auto obj = new QJsonValue(HB_ISNIL(1) ? static_cast<QJsonValue::Type>(QJsonValue::Null)
                                        : static_cast<QJsonValue::Type>(hb_parni(1)));
  Qt5xHb::returnNewObject(obj, true);
}

/*
QJsonValue(double n)
*/
HB_FUNC_STATIC(QJSONVALUE_NEW3)
{
  auto obj = new QJsonValue(PDOUBLE(1));
  Qt5xHb::returnNewObject(obj, true);
}

/*
QJsonValue(int n)
*/
HB_FUNC_STATIC(QJSONVALUE_NEW9)
{
  auto obj = new QJsonValue(PINT(1));
  Qt5xHb::returnNewObject(obj, true);
}

HB_FUNC_STATIC(QJSONVALUE_NEW)
{
  if (ISBETWEEN(0, 1) && ISNUMORNIL(1))
  {
    HB_FUNC_EXEC(QJSONVALUE_NEW1);
  }
  else if (ISNUMPAR(1) && HB_ISLOG(1))
  {
    /*
    QJsonValue(bool b)
    */
    auto obj = new QJsonValue(PBOOL(1));
    Qt5xHb::returnNewObject(obj, true);
  }
  else if (ISNUMPAR(1) && HB_ISNUM(1))
  {
    HB_FUNC_EXEC(QJSONVALUE_NEW3);
    // HB_FUNC_EXEC(QJSONVALUE_NEW9); // TODO: implementar
  }
  else if (ISNUMPAR(1) && HB_ISCHAR(1))
  {
    /*
    QJsonValue(const QString &s)
    */
    auto obj = new QJsonValue(PQSTRING(1));
    Qt5xHb::returnNewObject(obj, true);
  }
  else if (ISNUMPAR(1) && ISQJSONARRAY(1))
  {
    /*
    QJsonValue(const QJsonArray &a)
    */
    auto obj = new QJsonValue(*PQJSONARRAY(1));
    Qt5xHb::returnNewObject(obj, true);
  }
  else if (ISNUMPAR(1) && ISQJSONOBJECT(1))
  {
    /*
    QJsonValue(const QJsonObject &o)
    */
    auto obj = new QJsonValue(*PQJSONOBJECT(1));
    Qt5xHb::returnNewObject(obj, true);
  }
  else if (ISNUMPAR(1) && ISQJSONVALUE(1))
  {
    /*
    QJsonValue(const QJsonValue &other)
    */
    auto obj = new QJsonValue(*PQJSONVALUE(1));
    Qt5xHb::returnNewObject(obj, true);
  }
  else
  {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QJSONVALUE_DELETE)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
    delete obj;
    obj = nullptr;
    auto ptr = hb_itemPutPtr(nullptr, nullptr);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
bool isArray() const
*/
HB_FUNC_STATIC(QJSONVALUE_ISARRAY)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isArray());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isBool() const
*/
HB_FUNC_STATIC(QJSONVALUE_ISBOOL)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isBool());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isDouble() const
*/
HB_FUNC_STATIC(QJSONVALUE_ISDOUBLE)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isDouble());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isNull() const
*/
HB_FUNC_STATIC(QJSONVALUE_ISNULL)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isNull());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isObject() const
*/
HB_FUNC_STATIC(QJSONVALUE_ISOBJECT)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isObject());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isString() const
*/
HB_FUNC_STATIC(QJSONVALUE_ISSTRING)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isString());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isUndefined() const
*/
HB_FUNC_STATIC(QJSONVALUE_ISUNDEFINED)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isUndefined());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QJSONVALUE_TOARRAY)
{
  if (ISNUMPAR(1) && ISQJSONARRAY(1))
  {
    /*
    QJsonArray toArray(const QJsonArray &defaultValue) const
    */
    auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr)
    {
      auto ptr = new QJsonArray(obj->toArray(*PQJSONARRAY(1)));
      Qt5xHb::createReturnClass(ptr, "QJSONARRAY", true);
    }
  }
  else if (ISNUMPAR(0))
  {
    /*
    QJsonArray toArray() const
    */
    auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr)
    {
      auto ptr = new QJsonArray(obj->toArray());
      Qt5xHb::createReturnClass(ptr, "QJSONARRAY", true);
    }
  }
  else
  {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
bool toBool(bool defaultValue = false) const
*/
HB_FUNC_STATIC(QJSONVALUE_TOBOOL)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1))
    {
#endif
      RBOOL(obj->toBool(OPBOOL(1, false)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
double toDouble(double defaultValue = 0) const
*/
HB_FUNC_STATIC(QJSONVALUE_TODOUBLE)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISNUMORNIL(1))
    {
#endif
      RDOUBLE(obj->toDouble(OPDOUBLE(1, 0)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QJSONVALUE_TOOBJECT)
{
  if (ISNUMPAR(1) && ISQJSONOBJECT(1))
  {
    /*
    QJsonObject toObject(const QJsonObject &defaultValue) const
    */
    auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr)
    {
      auto ptr = new QJsonObject(obj->toObject(*PQJSONOBJECT(1)));
      Qt5xHb::createReturnClass(ptr, "QJSONOBJECT", true);
    }
  }
  else if (ISNUMPAR(0))
  {
    /*
    QJsonObject toObject() const
    */
    auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr)
    {
      auto ptr = new QJsonObject(obj->toObject());
      Qt5xHb::createReturnClass(ptr, "QJSONOBJECT", true);
    }
  }
  else
  {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QString toString(const QString &defaultValue = QString()) const
*/
HB_FUNC_STATIC(QJSONVALUE_TOSTRING)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISCHARORNIL(1))
    {
#endif
      RQSTRING(obj->toString(OPQSTRING(1, QString())));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QVariant toVariant() const
*/
HB_FUNC_STATIC(QJSONVALUE_TOVARIANT)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      auto ptr = new QVariant(obj->toVariant());
      Qt5xHb::createReturnClass(ptr, "QVARIANT", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QJsonValue::Type type() const
*/
HB_FUNC_STATIC(QJSONVALUE_TYPE)
{
  auto obj = static_cast<QJsonValue *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RENUM(obj->type());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
static QJsonValue fromVariant(const QVariant &variant)
*/
HB_FUNC_STATIC(QJSONVALUE_FROMVARIANT)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && ISQVARIANT(1))
  {
#endif
    auto ptr = new QJsonValue(QJsonValue::fromVariant(*PQVARIANT(1)));
    Qt5xHb::createReturnClass(ptr, "QJSONVALUE", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  }
  else
  {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

HB_FUNC_STATIC(QJSONVALUE_NEWFROM)
{
  auto self = hb_stackSelfItem();

  if (ISNUMPAR(1) && HB_ISOBJECT(1))
  {
    auto ptr = hb_itemPutPtr(nullptr, hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    auto des = hb_itemPutL(nullptr, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  }
  else if (ISNUMPAR(1) && HB_ISPOINTER(1))
  {
    auto ptr = hb_itemPutPtr(nullptr, hb_itemGetPtr(hb_param(1, HB_IT_POINTER)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    auto des = hb_itemPutL(nullptr, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  }
  else
  {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

HB_FUNC_STATIC(QJSONVALUE_NEWFROMOBJECT)
{
  HB_FUNC_EXEC(QJSONVALUE_NEWFROM);
}

HB_FUNC_STATIC(QJSONVALUE_NEWFROMPOINTER)
{
  HB_FUNC_EXEC(QJSONVALUE_NEWFROM);
}

HB_FUNC_STATIC(QJSONVALUE_SELFDESTRUCTION)
{
  hb_retl(hb_itemGetL(hb_objSendMsg(hb_stackSelfItem(), "SELF_DESTRUCTION", 0)));
}

HB_FUNC_STATIC(QJSONVALUE_SETSELFDESTRUCTION)
{
  auto self = hb_stackSelfItem();

  if (ISNUMPAR(1) && HB_ISLOG(1))
  {
    auto des = hb_itemPutL(nullptr, hb_parl(1));
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  }
  else
  {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

#pragma ENDDUMP
