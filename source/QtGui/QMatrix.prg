//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
REQUEST QLINE
REQUEST QLINEF
REQUEST QPAINTERPATH
REQUEST QPOINT
REQUEST QPOINTF
REQUEST QPOLYGON
REQUEST QPOLYGONF
REQUEST QRECT
REQUEST QRECTF
REQUEST QREGION
#endif

CLASS QMatrix

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD new
   METHOD delete
   METHOD setMatrix
   METHOD m11
   METHOD m12
   METHOD m21
   METHOD m22
   METHOD dx
   METHOD dy
   METHOD map1
   METHOD map2
   METHOD map
   METHOD mapRect
   METHOD mapToPolygon
   METHOD reset
   METHOD isIdentity
   METHOD translate
   METHOD scale
   METHOD shear
   METHOD rotate
   METHOD isInvertible
   METHOD determinant
   METHOD inverted

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QMatrix
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtGui/QMatrix>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtGui/QMatrix>
#endif

#include <QtGui/QPainterPath>

HB_FUNC_STATIC(QMATRIX_NEW)
{
  if (ISNUMPAR(1) && HB_ISNUM(1))
  {
    /*
    QMatrix(Qt::Initialization)
    */
    auto obj = new QMatrix(static_cast<Qt::Initialization>(hb_parni(1)));
    Qt5xHb::returnNewObject(obj, true);
  }
  else if (ISNUMPAR(0))
  {
    /*
    QMatrix()
    */
    auto obj = new QMatrix();
    Qt5xHb::returnNewObject(obj, true);
  }
  else if (ISNUMPAR(6) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5) && HB_ISNUM(6))
  {
    /*
    QMatrix(qreal m11, qreal m12, qreal m21, qreal m22,qreal dx, qreal dy)
    */
    auto obj = new QMatrix(PQREAL(1), PQREAL(2), PQREAL(3), PQREAL(4), PQREAL(5), PQREAL(6));
    Qt5xHb::returnNewObject(obj, true);
  }
  else if (ISNUMPAR(1) && ISQMATRIX(1))
  {
    /*
    QMatrix(const QMatrix &matrix)
    */
    auto obj = new QMatrix(*PQMATRIX(1));
    Qt5xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QMATRIX_DELETE)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
    delete obj;
    obj = nullptr;
    auto ptr = hb_itemPutPtr(nullptr, nullptr);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setMatrix(qreal m11, qreal m12, qreal m21, qreal m22,qreal dx, qreal dy)
*/
HB_FUNC_STATIC(QMATRIX_SETMATRIX)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(6) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5) && HB_ISNUM(6))
    {
#endif
      obj->setMatrix(PQREAL(1), PQREAL(2), PQREAL(3), PQREAL(4), PQREAL(5), PQREAL(6));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
qreal m11() const
*/
HB_FUNC_STATIC(QMATRIX_M11)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQREAL(obj->m11());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal m12() const
*/
HB_FUNC_STATIC(QMATRIX_M12)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQREAL(obj->m12());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal m21() const
*/
HB_FUNC_STATIC(QMATRIX_M21)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQREAL(obj->m21());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal m22() const
*/
HB_FUNC_STATIC(QMATRIX_M22)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQREAL(obj->m22());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal dx() const
*/
HB_FUNC_STATIC(QMATRIX_DX)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQREAL(obj->dx());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal dy() const
*/
HB_FUNC_STATIC(QMATRIX_DY)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQREAL(obj->dy());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void map(int x, int y, int * tx, int * ty) const
*/
HB_FUNC_STATIC(QMATRIX_MAP1)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4))
    {
#endif
      int par3;
      int par4;
      obj->map(PINT(1), PINT(2), &par3, &par4);
      hb_storni(par3, 3);
      hb_storni(par4, 4);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void map(qreal x, qreal y, qreal * tx, qreal * ty) const
*/
HB_FUNC_STATIC(QMATRIX_MAP2)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4))
    {
#endif
      qreal par3;
      qreal par4;
      obj->map(PQREAL(1), PQREAL(2), &par3, &par4);
      hb_stornd(par3, 3);
      hb_stornd(par4, 4);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QMATRIX_MAP)
{
  if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4))
  {
    HB_FUNC_EXEC(QMATRIX_MAP1);
  }
  else if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4))
  {
    HB_FUNC_EXEC(QMATRIX_MAP2);
  }
  else if (ISNUMPAR(1) && ISQPOINT(1))
  {
    /*
    QPoint map(const QPoint &p) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QPoint(obj->map(*PQPOINT(1)));
      Qt5xHb::createReturnClass(ptr, "QPOINT", true);
    }
  }
  else if (ISNUMPAR(1) && ISQPOINTF(1))
  {
    /*
    QPointF map(const QPointF &p) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QPointF(obj->map(*PQPOINTF(1)));
      Qt5xHb::createReturnClass(ptr, "QPOINTF", true);
    }
  }
  else if (ISNUMPAR(1) && ISQLINE(1))
  {
    /*
    QLine map(const QLine &l) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QLine(obj->map(*PQLINE(1)));
      Qt5xHb::createReturnClass(ptr, "QLINE", true);
    }
  }
  else if (ISNUMPAR(1) && ISQLINEF(1))
  {
    /*
    QLineF map(const QLineF &l) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QLineF(obj->map(*PQLINEF(1)));
      Qt5xHb::createReturnClass(ptr, "QLINEF", true);
    }
  }
  else if (ISNUMPAR(1) && ISQPOLYGON(1))
  {
    /*
    QPolygon map(const QPolygon &a) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QPolygon(obj->map(*PQPOLYGON(1)));
      Qt5xHb::createReturnClass(ptr, "QPOLYGON", true);
    }
  }
  else if (ISNUMPAR(1) && ISQPOLYGONF(1))
  {
    /*
    QPolygonF map(const QPolygonF &a) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QPolygonF(obj->map(*PQPOLYGONF(1)));
      Qt5xHb::createReturnClass(ptr, "QPOLYGONF", true);
    }
  }
  else if (ISNUMPAR(1) && ISQREGION(1))
  {
    /*
    QRegion map(const QRegion &r) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QRegion(obj->map(*PQREGION(1)));
      Qt5xHb::createReturnClass(ptr, "QREGION", true);
    }
  }
  else if (ISNUMPAR(1) && ISQPAINTERPATH(1))
  {
    /*
    QPainterPath map(const QPainterPath &p) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QPainterPath(obj->map(*PQPAINTERPATH(1)));
      Qt5xHb::createReturnClass(ptr, "QPAINTERPATH", true);
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QMATRIX_MAPRECT)
{
  if (ISNUMPAR(1) && ISQRECT(1))
  {
    /*
    QRect mapRect(const QRect &) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QRect(obj->mapRect(*PQRECT(1)));
      Qt5xHb::createReturnClass(ptr, "QRECT", true);
    }
  }
  else if (ISNUMPAR(1) && ISQRECTF(1))
  {
    /*
    QRectF mapRect(const QRectF &) const
    */
    auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

    if (obj != nullptr) {
      auto ptr = new QRectF(obj->mapRect(*PQRECTF(1)));
      Qt5xHb::createReturnClass(ptr, "QRECTF", true);
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QPolygon mapToPolygon(const QRect &r) const
*/
HB_FUNC_STATIC(QMATRIX_MAPTOPOLYGON)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQRECT(1))
    {
#endif
      auto ptr = new QPolygon(obj->mapToPolygon(*PQRECT(1)));
      Qt5xHb::createReturnClass(ptr, "QPOLYGON", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void reset()
*/
HB_FUNC_STATIC(QMATRIX_RESET)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      obj->reset();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
bool isIdentity() const
*/
HB_FUNC_STATIC(QMATRIX_ISIDENTITY)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isIdentity());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QMatrix &translate(qreal dx, qreal dy)
*/
HB_FUNC_STATIC(QMATRIX_TRANSLATE)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2))
    {
#endif
      auto ptr = &obj->translate(PQREAL(1), PQREAL(2));
      Qt5xHb::createReturnClass(ptr, "QMATRIX", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QMatrix &scale(qreal sx, qreal sy)
*/
HB_FUNC_STATIC(QMATRIX_SCALE)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2))
    {
#endif
      auto ptr = &obj->scale(PQREAL(1), PQREAL(2));
      Qt5xHb::createReturnClass(ptr, "QMATRIX", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QMatrix &shear(qreal sh, qreal sv)
*/
HB_FUNC_STATIC(QMATRIX_SHEAR)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2))
    {
#endif
      auto ptr = &obj->shear(PQREAL(1), PQREAL(2));
      Qt5xHb::createReturnClass(ptr, "QMATRIX", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QMatrix &rotate(qreal a)
*/
HB_FUNC_STATIC(QMATRIX_ROTATE)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1))
    {
#endif
      auto ptr = &obj->rotate(PQREAL(1));
      Qt5xHb::createReturnClass(ptr, "QMATRIX", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isInvertible() const
*/
HB_FUNC_STATIC(QMATRIX_ISINVERTIBLE)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isInvertible());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal determinant() const
*/
HB_FUNC_STATIC(QMATRIX_DETERMINANT)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQREAL(obj->determinant());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QMatrix inverted(bool * invertible = nullptr) const
*/
HB_FUNC_STATIC(QMATRIX_INVERTED)
{
  auto obj = static_cast<QMatrix *>(Qt5xHb::itemGetPtrStackSelfItem());

  if (obj != nullptr) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1))
    {
#endif
      bool par1;
      auto ptr = new QMatrix(obj->inverted(&par1));
      Qt5xHb::createReturnClass(ptr, "QMATRIX", true);
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QMATRIX_NEWFROM)
{
  auto self = hb_stackSelfItem();

  if (ISNUMPAR(1) && HB_ISOBJECT(1))
  {
    auto ptr = hb_itemPutPtr(nullptr, hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    auto des = hb_itemPutL(nullptr, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  }
  else if (ISNUMPAR(1) && HB_ISPOINTER(1))
  {
    auto ptr = hb_itemPutPtr(nullptr, hb_itemGetPtr(hb_param(1, HB_IT_POINTER)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    auto des = hb_itemPutL(nullptr, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

HB_FUNC_STATIC(QMATRIX_NEWFROMOBJECT)
{
  HB_FUNC_EXEC(QMATRIX_NEWFROM);
}

HB_FUNC_STATIC(QMATRIX_NEWFROMPOINTER)
{
  HB_FUNC_EXEC(QMATRIX_NEWFROM);
}

HB_FUNC_STATIC(QMATRIX_SELFDESTRUCTION)
{
  hb_retl(hb_itemGetL(hb_objSendMsg(hb_stackSelfItem(), "SELF_DESTRUCTION", 0)));
}

HB_FUNC_STATIC(QMATRIX_SETSELFDESTRUCTION)
{
  auto self = hb_stackSelfItem();

  if (ISNUMPAR(1) && HB_ISLOG(1))
  {
    auto des = hb_itemPutL(nullptr, hb_parl(1));
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

#pragma ENDDUMP
